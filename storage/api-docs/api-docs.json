{
    "openapi": "3.0.0",
    "info": {
        "title": "Integration Swagger Api with Laravel Sanctum authentication",
        "version": "0.1"
    },
    "paths": {
        "/api/login/store": {
            "post": {
                "tags": [
                    "Login"
                ],
                "summary": "Authenticate User Login and generate token",
                "operationId": "65b4746d608da585bf08d8508bed8c54",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "Password",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login Successful"
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                }
            }
        },
        "/api/projects": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Get a list of projects",
                "operationId": "2ea4919d0a733012d5e30a9c60233aca",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of the project",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status of the project",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "due_date",
                        "in": "query",
                        "description": "Due date of the project",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#components/schemas/ProjectResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "Store projects",
                "operationId": "48ad9efff74ef8cbc32998fcb386e258",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreProjectRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#components/schemas/ProjectResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Unauthorized request"
                    },
                    "403": {
                        "description": "Forbidden request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/projects/{projectId}": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "View single project",
                "operationId": "viewProjectId",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project View Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project view Successful"
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Unauthorized request"
                    },
                    "403": {
                        "description": "Forbidden request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Projects"
                ],
                "summary": "Remove single projects",
                "operationId": "deleteProjectId",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project Remove Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project deleted Successful"
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Unauthorized request"
                    },
                    "403": {
                        "description": "Forbidden request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Projects"
                ],
                "summary": "Update projects",
                "operationId": "updateProjectId",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project Update Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProjectRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Project updated Successful"
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Unauthorized request"
                    },
                    "403": {
                        "description": "Forbidden request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "StoreProjectRequest": {
                "title": "Store Project request",
                "description": "Store Project request body data",
                "required": [
                    "name",
                    "status",
                    "due_date"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new project",
                        "type": "string",
                        "example": "A nice project"
                    },
                    "description": {
                        "title": "description",
                        "description": "Description of the new project",
                        "type": "string",
                        "example": "This is new project's description"
                    },
                    "status": {
                        "title": "status",
                        "description": "status of the new project",
                        "type": "string",
                        "example": "pending"
                    },
                    "due_date": {
                        "title": "due_date",
                        "description": "deadline date of the new project",
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-01"
                    },
                    "image": {
                        "title": "image",
                        "description": "image of the new project"
                    }
                },
                "type": "object"
            },
            "UpdateProjectRequest": {
                "title": "Update Project request",
                "description": "Update Project request body data",
                "required": [
                    "name",
                    "status",
                    "due_date"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the project",
                        "type": "string",
                        "example": "A nice project"
                    },
                    "description": {
                        "title": "description",
                        "description": "Description of the  project",
                        "type": "string",
                        "example": "This is project's description"
                    },
                    "status": {
                        "title": "status",
                        "description": "status of the project",
                        "type": "string",
                        "example": "pending"
                    },
                    "due_date": {
                        "title": "due_date",
                        "description": "deadline date of the project",
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-01"
                    },
                    "image": {
                        "title": "image",
                        "description": "image of the project"
                    }
                },
                "type": "object"
            },
            "ProjectResource": {
                "title": "Project data",
                "description": "Return project response data"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Laravel sanctum oauth2 security.",
                "name": "Authorization",
                "in": "header",
                "scheme": "http",
                "flows": {
                    "password": {
                        "authorizationUrl": "http://localhost:8000//oauth/authorize",
                        "tokenUrl": "http://localhost:8000//oauth/token",
                        "refreshUrl": "http://localhost:8000//token/refresh",
                        "scopes": []
                    }
                }
            }
        }
    }
}